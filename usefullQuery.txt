rdf tuple : <subject, predicate, object>



En utilisant l'API on est bloqué à 200 résultats par requête
En utilisant l'endpoint on est bloqué à 30000 résultats par requête
On va donc utilisé l'endpoint et des requête SPARQL pour récupérer tout les résultats qu'on veut
http://wasabi.inria.fr/sparql



Différent PREFIX utilisé (utile pour les requêtes SPARQL):
PREFIX dbo:     <http://dbpedia.org/ontology/> 
PREFIX dcterms: <http://purl.org/dc/terms/> 
PREFIX foaf:    <http://xmlns.com/foaf/0.1/> 
PREFIX mo:      <http://purl.org/ontology/mo/> 
PREFIX owl:     <http://www.w3.org/2002/07/owl#> 
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX schema:  <http://schema.org/> 
PREFIX wsb:     <http://ns.inria.fr/wasabi/ontology/> 
PREFIX xsd:     <http://www.w3.org/2001/XMLSchema#> 



Merge de requête :
Si l'on utilise LIMIT 100 on récupère les 100 premiers résultats de la requête
En ajoutant OFFSET 100 on peut récupérer les 100 premiers résultats en partant du 100ème résultat
Ainsi si l'on utilise la même requête et que l'on change juste l'OFFSET comme ci-dessous, on peut récupérer tout les résultats qu'on veut :
LIMIT 100
LIMIT 100 OFFSET 100
LIMIT 100 OFFSET 200
LIMIT 100 OFFSET 300
etc...





=======================================================================================================================================
=======================================================================================================================================
=======================================================================================================================================





Pour récupérer tout les prédicat des artistes en passant par le sous-graph nommé "artists" :
SELECT DISTINCT ?predicate from <http://ns.inria.fr/wasabi/graph/artists>
WHERE {
    ?subject ?predicate ?value
}
ORDER BY ?predicate



Predicate lié au artistes :
http://dbpedia.org/ontology/abstract
http://dbpedia.org/ontology/associatedMusicalArtist
http://dbpedia.org/ontology/genre
http://ns.inria.fr/wasabi/ontology/BBC_page
http://ns.inria.fr/wasabi/ontology/allMusic_page
http://ns.inria.fr/wasabi/ontology/amazon_page
http://ns.inria.fr/wasabi/ontology/city
http://ns.inria.fr/wasabi/ontology/country
http://ns.inria.fr/wasabi/ontology/deezer_artist_id
http://ns.inria.fr/wasabi/ontology/deezer_fans
http://ns.inria.fr/wasabi/ontology/deezer_page
http://ns.inria.fr/wasabi/ontology/discogs_id
http://ns.inria.fr/wasabi/ontology/equipBoard_page
http://ns.inria.fr/wasabi/ontology/facebook_page
http://ns.inria.fr/wasabi/ontology/googlePlus_page
http://ns.inria.fr/wasabi/ontology/iTunes_page
http://ns.inria.fr/wasabi/ontology/instagram_page
http://ns.inria.fr/wasabi/ontology/lastFm_page
http://ns.inria.fr/wasabi/ontology/location
http://ns.inria.fr/wasabi/ontology/musicbrainz_id
http://ns.inria.fr/wasabi/ontology/name_without_accent
http://ns.inria.fr/wasabi/ontology/pureVolume_page
http://ns.inria.fr/wasabi/ontology/rateYourMusic_page
http://ns.inria.fr/wasabi/ontology/real_name
http://ns.inria.fr/wasabi/ontology/record_label
http://ns.inria.fr/wasabi/ontology/secondHandSongs_page
http://ns.inria.fr/wasabi/ontology/soundCloud_page
http://ns.inria.fr/wasabi/ontology/spotify_page
http://ns.inria.fr/wasabi/ontology/twitter_page
http://ns.inria.fr/wasabi/ontology/wikia_page
http://ns.inria.fr/wasabi/ontology/wikidata_page
http://ns.inria.fr/wasabi/ontology/youTube_page
http://purl.org/dc/terms/abstract
http://purl.org/dc/terms/subject
http://purl.org/ontology/mo/discogs
http://purl.org/ontology/mo/homepage
http://purl.org/ontology/mo/musicbrainz
http://purl.org/ontology/mo/musicbrainz_guid
http://purl.org/ontology/mo/myspace
http://purl.org/ontology/mo/uuid
http://purl.org/ontology/mo/wikipedia
http://schema.org/alternateName
http://schema.org/birthDate
http://schema.org/deathDate
http://schema.org/disambiguatingDescription
http://schema.org/dissolutionDate
http://schema.org/endDate
http://schema.org/foundingDate
http://schema.org/genre
http://schema.org/members
http://schema.org/startDate
http://www.w3.org/1999/02/22-rdf-syntax-ns#type
http://www.w3.org/2000/01/rdf-schema#label
http://www.w3.org/2002/07/owl#sameAs
http://xmlns.com/foaf/0.1/gender
http://xmlns.com/foaf/0.1/name





=======================================================================================================================================
=======================================================================================================================================
=======================================================================================================================================





Pour récupérer tout les prédicat des albums en passant par le sous-graph nommé "albums" :
SELECT DISTINCT ?predicate from <http://ns.inria.fr/wasabi/graph/albums>
WHERE {
    ?subject ?predicate ?value
}
ORDER BY ?predicate



Predicate lié au albums :
http://ns.inria.fr/wasabi/ontology/album_length
http://ns.inria.fr/wasabi/ontology/allMusic_page
http://ns.inria.fr/wasabi/ontology/amazon_page
http://ns.inria.fr/wasabi/ontology/deezer_album_id
http://ns.inria.fr/wasabi/ontology/deezer_fans
http://ns.inria.fr/wasabi/ontology/deezer_page
http://ns.inria.fr/wasabi/ontology/discogs_id
http://ns.inria.fr/wasabi/ontology/has_explicit_lyrics
http://ns.inria.fr/wasabi/ontology/iTunes_page
http://ns.inria.fr/wasabi/ontology/spotify_page
http://purl.org/dc/terms/language
http://purl.org/dc/terms/title
http://purl.org/ontology/mo/discogs
http://purl.org/ontology/mo/genre
http://purl.org/ontology/mo/homepage
http://purl.org/ontology/mo/musicbrainz
http://purl.org/ontology/mo/musicbrainz_guid
http://purl.org/ontology/mo/performer
http://purl.org/ontology/mo/upc
http://purl.org/ontology/mo/uuid
http://purl.org/ontology/mo/wikipedia
http://schema.org/barcode
http://schema.org/datePublished
http://schema.org/disambiguatingDescription
http://schema.org/location
http://schema.org/releaseDate
http://www.w3.org/1999/02/22-rdf-syntax-ns#type
http://www.w3.org/2002/07/owl#sameAs





=======================================================================================================================================
=======================================================================================================================================
=======================================================================================================================================





Pour récupérer tout les prédicat des chansons en passant par le sous-graph nommé "songs" :
SELECT DISTINCT ?predicate from <http://ns.inria.fr/wasabi/graph/songs>
WHERE {
    ?subject ?predicate ?value
}
ORDER BY ?predicate



Predicate lié au chansons :
http://ns.inria.fr/wasabi/ontology/allMusic_page
http://ns.inria.fr/wasabi/ontology/amazon_page
http://ns.inria.fr/wasabi/ontology/deezer_artist_id
http://ns.inria.fr/wasabi/ontology/deezer_page
http://ns.inria.fr/wasabi/ontology/deezer_song_id
http://ns.inria.fr/wasabi/ontology/explicit_lyrics_count
http://ns.inria.fr/wasabi/ontology/gain
http://ns.inria.fr/wasabi/ontology/goEar_page
http://ns.inria.fr/wasabi/ontology/has_explicit_lyrics
http://ns.inria.fr/wasabi/ontology/hypeMachine_page
http://ns.inria.fr/wasabi/ontology/iTunes_page
http://ns.inria.fr/wasabi/ontology/language_detected
http://ns.inria.fr/wasabi/ontology/lastFm_page
http://ns.inria.fr/wasabi/ontology/multitrack_file
http://ns.inria.fr/wasabi/ontology/multitrack_path
http://ns.inria.fr/wasabi/ontology/pandora_page
http://ns.inria.fr/wasabi/ontology/rank
http://ns.inria.fr/wasabi/ontology/record_label
http://ns.inria.fr/wasabi/ontology/recording_description
http://ns.inria.fr/wasabi/ontology/song_notes
http://ns.inria.fr/wasabi/ontology/song_summary
http://ns.inria.fr/wasabi/ontology/spotify_page
http://ns.inria.fr/wasabi/ontology/title_without_accent
http://ns.inria.fr/wasabi/ontology/youTube_page
http://purl.org/dc/terms/abstract
http://purl.org/dc/terms/format
http://purl.org/dc/terms/language
http://purl.org/dc/terms/subject
http://purl.org/dc/terms/title
http://purl.org/ontology/af/confidence
http://purl.org/ontology/chord/chord
http://purl.org/ontology/mo/bpm
http://purl.org/ontology/mo/duration
http://purl.org/ontology/mo/homepage
http://purl.org/ontology/mo/isrc
http://purl.org/ontology/mo/musicbrainz
http://purl.org/ontology/mo/musicbrainz_guid
http://purl.org/ontology/mo/performer
http://purl.org/ontology/mo/producer
http://purl.org/ontology/mo/track_number
http://purl.org/ontology/mo/uuid
http://purl.org/ontology/mo/wikipedia
http://schema.org/album
http://schema.org/author
http://schema.org/award
http://schema.org/datePublished
http://schema.org/disambiguatingDescription
http://schema.org/duration
http://schema.org/endTime
http://schema.org/releaseDate
http://schema.org/startTime
http://www.w3.org/1999/02/22-rdf-syntax-ns#type
http://www.w3.org/2002/07/owl#sameAs





Pour récupérer tout les prédicat des chansons extended en passant par le sous-graph nommé "songs-extd" :
SELECT DISTINCT ?predicate from <http://ns.inria.fr/wasabi/graph/songs-extd>
WHERE {
    ?subject ?predicate ?value
}
ORDER BY ?predicate



Predicate lié au chansons extended :
http://ns.inria.fr/wasabi/ontology/arousal
http://ns.inria.fr/wasabi/ontology/emotion_tags
http://ns.inria.fr/wasabi/ontology/has_emotion_tags
http://ns.inria.fr/wasabi/ontology/has_explicit_lyrics
http://ns.inria.fr/wasabi/ontology/has_social_tags
http://ns.inria.fr/wasabi/ontology/lastFm_song_id
http://ns.inria.fr/wasabi/ontology/probability
http://ns.inria.fr/wasabi/ontology/social_tags
http://ns.inria.fr/wasabi/ontology/tag_count
http://ns.inria.fr/wasabi/ontology/topic
http://ns.inria.fr/wasabi/ontology/topic_probability
http://ns.inria.fr/wasabi/ontology/topic_terms
http://ns.inria.fr/wasabi/ontology/valence
http://purl.org/ontology/mo/uuid
http://www.w3.org/1999/02/22-rdf-syntax-ns#type
http://www.w3.org/2000/01/rdf-schema#label





=======================================================================================================================================
=======================================================================================================================================
=======================================================================================================================================





Requête de Lucas :
PREFIX foaf:    <http://xmlns.com/foaf/0.1/>
PREFIX schema:  <http://schema.org/> 
PREFIX wsb:     <http://ns.inria.fr/wasabi/ontology/> 

SELECT ?subject ?name ?birth ?death (GROUP_CONCAT(?genre; separator=", ") as ?genres) ?city ?country from <http://ns.inria.fr/wasabi/graph/artists>
WHERE {
    ?subject schema:birthDate ?birth ;
             schema:genre ?genre ;
             foaf:name ?name ;
             wsb:location ?location .
    
    ?location wsb:city ?city ;
              wsb:country ?country .
             
             
    OPTIONAL {?subject schema:deathDate ?death .}
}
ORDER BY ?name



Requête de Quentin (Date de naissance parfois NULL pour les membres d'un groupe, nbMembers = 0 si pas un groupe) :
PREFIX wsb: <http://ns.inria.fr/wasabi/ontology/> 
PREFIX mo: <http://purl.org/ontology/mo/> 
PREFIX schema: <http://schema.org/> 

SELECT ?subject ?title ?genre ?date ?performer ?artistType (COUNT(?members) as ?nbMembers) (GROUP_CONCAT(?name; separator="; ") as ?names) (GROUP_CONCAT(?birth; separator="; ") as ?births) 
from <http://ns.inria.fr/wasabi/graph/albums> from <http://ns.inria.fr/wasabi/graph/artists>
WHERE {
    ?subject <http://purl.org/ontology/mo/genre> ?genre ;
             <http://purl.org/dc/terms/title> ?title ;
             <http://schema.org/releaseDate> ?date ;
             mo:performer ?performer .

    {
        ?performer a ?artistType ;
                   schema:members ?members .

        ?members <http://xmlns.com/foaf/0.1/name> ?name ;
                 <http://schema.org/birthDate> ?birth .

        FILTER (?artistType = wsb:Artist_Group)
    }
    UNION
    {
        ?performer a ?artistType ;
                   <http://xmlns.com/foaf/0.1/name> ?name ;
                   <http://schema.org/birthDate> ?birth .

        FILTER (?artistType = wsb:Artist_Person || ?artistType = wsb:Choir || ?artistType = wsb:Orchestra) 
    }

}
ORDER BY ?subject
LIMIT 1000 OFFSET 5000